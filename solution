class Solution {
public:
    int solve(vector<int>& cost, int ind, vector<int>& dp){
        if(ind>=cost.size())return 0;
        if(dp[ind]!=-1)return dp[ind];
        int take1 = solve(cost,ind+1,dp) + cost[ind];
        int take2 = INT_MAX;
        if(ind<=cost.size()-1)take2 = solve(cost,ind+2,dp)+cost[ind];
        return dp[ind] = min(take1,take2);
    }

    int minCostClimbingStairs(vector<int>& cost) {
        int t=0;
        int n = cost.size();
        vector<int>dp(n+1,-1);
        return min(solve(cost,0,dp),solve(cost,1,dp));
    }
};
